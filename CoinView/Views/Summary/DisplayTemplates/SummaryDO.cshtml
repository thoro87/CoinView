@model CoinView.Models.SummaryDO

<div class="SummaryTable">
    <span class="Title">@Model.Name</span><br />
    <table class="SummaryEUR">
        <tr>
            <th></th>
            <th class="BorderLeft">Invests</th>
            <th>Trades</th>
            <th>Creations</th>
            <th class="BorderLeft">Total</th>

        </tr>
        <tr class="BorderTop">
            <th>Bought</th>
            <td class="Number BorderLeft">@Model.InvestsBuyValueEUR.ToString("C")</td>
            <td class="Number">@Model.TradesBuyValueEUR.ToString("C")</td>
            <td class="Number">@Model.CreationsBuyValueEUR.ToString("C")</td>
            <td class="Number BorderLeft">@Model.TotalBuyValueEUR.ToString("C")</td>
        </tr>
        <tr>
            <th>Holding</th>
            <td class="Number BorderLeft">@Model.InvestsSellValueEUR.ToString("C")</td>
            <td class="Number">@Model.TradesSellValueEUR.ToString("C")</td>
            <td class="Number">@Model.CreationsSellValueEUR.ToString("C")</td>
            <td class="Number BorderLeft">@Model.TotalSellValueEUR.ToString("C")</td>
        </tr>
        <tr class="BorderTop">
            <th>Profit</th>
            <td class="Number BorderLeft @(Model.InvestsResultValueEUR >= 0 ? "TextGreen" : "TextRed")">@Model.InvestsResultValueEUR.ToString("C")</td>
            <td class="Number @(Model.TradesResultValueEUR >= 0 ? "TextGreen" : "TextRed")">@(Model.TradesResultValueEUR.ToString("C"))</td>
            <td class="Number @(Model.CreationsResultValueEUR >= 0 ? "TextGreen" : "TextRed")">@Model.CreationsResultValueEUR.ToString("C")</td>
            <td class="Number BorderLeft @(Model.TotalResultValueEUR >= 0 ? "TextGreen" : "TextRed")">@Model.TotalResultValueEUR.ToString("C")</td>
        </tr>
        <tr>
            <th></th>
            <td class="Number BorderLeft">@Model.InvestsResultValueEURPercent.ToString("P")</td>
            <td class="Number">@Model.TradesResultValueEURPercent.ToString("P")</td>
            <td></td>
            <td class="Number BorderLeft">@Model.TotalResultValueEURPercent.ToString("P")</td>
        </tr>
    </table>

    <table class="SummaryBTC">
        <tr>
            <th></th>
            <th class="BorderLeft">Invests</th>
            <th>Trades</th>
            <th>Creations</th>
            <th class="BorderLeft">Total</th>

        </tr>
        <tr class="BorderTop">
            <th>Bought</th>
            <td class="Number BorderLeft">@Model.InvestsBuyValueBTC.ToString("0.########")</td>
            <td class="Number">@Model.TradesBuyValueBTC.ToString("0.########")</td>
            <td class="Number">@Model.CreationsBuyValueBTC.ToString("0.########")</td>
            <td class="Number BorderLeft">@Model.TotalBuyValueBTC.ToString("0.########")</td>
        </tr>
        <tr>
            <th>Holding</th>
            <td class="Number BorderLeft">@Model.InvestsSellValueBTC.ToString("0.########")</td>
            <td class="Number">@Model.TradesSellValueBTC.ToString("0.########")</td>
            <td class="Number">@Model.CreationsSellValueBTC.ToString("0.########")</td>
            <td class="Number BorderLeft">@Model.TotalSellValueBTC.ToString("0.########")</td>
        </tr>
        <tr class="BorderTop">
            <th>Profit</th>
            <td class="Number BorderLeft @(Model.InvestsResultValueBTC >= 0 ? "TextGreen" : "TextRed")">@Model.InvestsResultValueBTC.ToString("0.########")</td>
            <td class="Number @(Model.TradesResultValueBTC >= 0 ? "TextGreen" : "TextRed")">@(Model.TradesResultValueBTC.ToString("0.########"))</td>
            <td class="Number @(Model.CreationsResultValueBTC >= 0 ? "TextGreen" : "TextRed")">@Model.CreationsResultValueBTC.ToString("0.########")</td>
            <td class="Number BorderLeft @(Model.TotalResultValueBTC >= 0 ? "TextGreen" : "TextRed")">@Model.TotalResultValueBTC.ToString("0.########")</td>
        </tr>
        <tr>
            <th></th>
            <td class="Number">@Model.InvestsResultValueBTCPercent.ToString("P")</td>
            <td class="Number">@Model.TradesResultValueBTCPercent.ToString("P")</td>
            <td></td>
            <td class="Number BorderLeft">@Model.TotalResultValueBTCPercent.ToString("P")</td>
        </tr>
    </table>

    <br />
    <canvas id="@("chart" + Model.Name)" width="100" height="50"></canvas>
    <script>
        var ctx = $("#" + "@("chart" + Model.Name)");
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.ChartDates)),
                datasets: [
                    {
                        label: 'Total',
                        data: @Html.Raw(Json.Serialize(Model.ChartTotalSellValuesEUR)),
                        borderColor: 'rgba(33,222,82,1)',
                        lineTension: 0
                    },
                    {
                        label: 'Buy',
                        data: @Html.Raw(Json.Serialize(Model.ChartTotalBuyValuesEUR)),
                        borderColor: 'rgba(255,74,74,1)',
                        lineTension: 0,
                        hidden: true
                    },
                    {
                        label: 'Invests',
                        data: @Html.Raw(Json.Serialize(Model.ChartInvestsSellValuesEUR)),
                        borderColor: 'rgba(33,222,255,1)',
                        lineTension: 0,
                        hidden: true
                    },
                    {
                        label: 'Trades',
                        data: @Html.Raw(Json.Serialize(Model.ChartTradesSellValuesEUR)),
                        borderColor: 'rgba(160,60,160,1)',
                        lineTension: 0,
                        hidden: true
                    },
                    {
                        label: '50k',
                        data: @Html.Raw(Json.Serialize(Model.ChartHouseStartEUR)),
                        borderColor: 'rgba(255, 255, 255, 1)',
                        lineTension: 0,
                        hidden: true
                }]
            },
            options: { legend: { labels: { boxWidth: 2, padding: 15 } }}
        });
    </script>

</div>
